/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontendTrabajadores;

import ManejoDeInformacion.ListaEnlazada;
import ManejoDeInformacion.ManejadorArchivo;
import ManejoDeInformacion.ManejadorBusqueda;
import ManejoDeInformacion.ManejadorDB;
import ManejoDeInformacion.Nodo;
import ManejoDeInformacion.Registro;
import java.awt.event.KeyEvent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author phily
 */
public class Home extends javax.swing.JFrame {
    public static ManejadorDB manejadorDB = new ManejadorDB();
    ManejadorArchivo manejadorArchivo = new ManejadorArchivo();    
    ManejadorBusqueda buscador = new ManejadorBusqueda();
    Registro registrador = new Registro();
    avisoDBvacia avisoDB = new avisoDBvacia(new javax.swing.JFrame(), true);
    listadoLineasErradas listado = new listadoLineasErradas(new javax.swing.JFrame(), true);    
    int camposLlenos=0;
    char[] contrasenia;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        manejadorDB.conectarConDB();
        ManejadorDB.estaVacia();//recuerda que devuelve true o false si es que pudo o no realizar su acción de manera respectiva
        
        if(ManejadorDB.estaVacia==0){
            avisoDB.setLocationRelativeTo(null);
            avisoDB.setVisible(true);            
            
            do{
                abastecer();
            }while(!avisoDB.devolverDecision());//no es necesario usar el método para manipular los campos luego de haber aceptado, por el hecho de que están en su estado natural xD    
        }//sino pues no se muestra y como el botón auxiliar ya está deshabilitado...MMM al final no se empleará este btn por elwhilecito xD
        
            ManejadorDB.estaVacia();
            if(ManejadorDB.estaVacia==0){
              //eso quiere decir que no se cargo bien el archivo o algo por el estilo de
              //tal manera que no pudo completarse el proceso de abastecimiento
               manipularCampos(false);
               mnItem_abastecerAuxiliar.setEnabled(true);              
            }                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        cbBx_sucursales = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rbtn_modoGerente = new javax.swing.JRadioButton();
        rbtn_modoCajero = new javax.swing.JRadioButton();
        rbtn_modoBodeguero = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtF_nombreUsuario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btn_entrar = new javax.swing.JButton();
        passF_contraseniaTrabajador = new javax.swing.JPasswordField();
        lbl_Fondo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnItem_abastecerAuxiliar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 747));
        setMinimumSize(new java.awt.Dimension(1000, 747));
        setPreferredSize(new java.awt.Dimension(1000, 747));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(139, 124, 109));
        jLabel1.setFont(new java.awt.Font("Sawasdee", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(239, 225, 225));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<< WORKspace >>");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 30, 1000, 60);

        cbBx_sucursales.setFont(new java.awt.Font("Samanata", 0, 15)); // NOI18N
        cbBx_sucursales.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBx_sucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBx_sucursalesActionPerformed(evt);
            }
        });
        getContentPane().add(cbBx_sucursales);
        cbBx_sucursales.setBounds(110, 190, 320, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logos_Clientes_GT_Intelaf.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 580, 340, 100);

        jLabel3.setFont(new java.awt.Font("Sawasdee", 1, 20)); // NOI18N
        jLabel3.setText("TIENDA");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(110, 130, 150, 35);

        jLabel4.setFont(new java.awt.Font("Sawasdee", 1, 20)); // NOI18N
        jLabel4.setText("CARGO");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(110, 260, 100, 35);

        buttonGroup1.add(rbtn_modoGerente);
        rbtn_modoGerente.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        rbtn_modoGerente.setSelected(true);
        rbtn_modoGerente.setText("Gerente");
        rbtn_modoGerente.setContentAreaFilled(false);
        getContentPane().add(rbtn_modoGerente);
        rbtn_modoGerente.setBounds(140, 320, 230, 25);

        buttonGroup1.add(rbtn_modoCajero);
        rbtn_modoCajero.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        rbtn_modoCajero.setText("Cajero");
        rbtn_modoCajero.setContentAreaFilled(false);
        getContentPane().add(rbtn_modoCajero);
        rbtn_modoCajero.setBounds(140, 380, 78, 25);

        buttonGroup1.add(rbtn_modoBodeguero);
        rbtn_modoBodeguero.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        rbtn_modoBodeguero.setText("Bodeguero");
        rbtn_modoBodeguero.setContentAreaFilled(false);
        getContentPane().add(rbtn_modoBodeguero);
        rbtn_modoBodeguero.setBounds(140, 450, 118, 25);

        jPanel1.setBackground(new java.awt.Color(199, 116, 33));
        jPanel1.setLayout(null);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Experiencia-Usuario.png"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(70, 30, 250, 250);

        jLabel6.setFont(new java.awt.Font("Sawasdee", 1, 20)); // NOI18N
        jLabel6.setText("Nombre de usuario:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 340, 190, 35);

        txtF_nombreUsuario.setFont(new java.awt.Font("Sahadeva", 0, 15)); // NOI18N
        jPanel1.add(txtF_nombreUsuario);
        txtF_nombreUsuario.setBounds(210, 340, 150, 30);

        jLabel7.setFont(new java.awt.Font("Sawasdee", 1, 20)); // NOI18N
        jLabel7.setText("Contraseña:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 400, 120, 35);

        btn_entrar.setFont(new java.awt.Font("Sawasdee", 1, 25)); // NOI18N
        btn_entrar.setText("ENTRAR");
        btn_entrar.setEnabled(false);
        btn_entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_entrarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_entrar);
        btn_entrar.setBounds(130, 470, 140, 50);

        passF_contraseniaTrabajador.setEnabled(false);
        passF_contraseniaTrabajador.setSelectionColor(new java.awt.Color(213, 165, 139));
        passF_contraseniaTrabajador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passF_contraseniaTrabajadorMouseClicked(evt);
            }
        });
        passF_contraseniaTrabajador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passF_contraseniaTrabajadorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passF_contraseniaTrabajadorKeyTyped(evt);
            }
        });
        jPanel1.add(passF_contraseniaTrabajador);
        passF_contraseniaTrabajador.setBounds(150, 400, 210, 28);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(570, 130, 380, 540);

        lbl_Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondoPrinciapal.jpg"))); // NOI18N
        getContentPane().add(lbl_Fondo);
        lbl_Fondo.setBounds(0, 0, 1000, 720);

        jMenu1.setText("File");

        mnItem_abastecerAuxiliar.setText("abastecer base de datos");
        mnItem_abastecerAuxiliar.setEnabled(false);
        mnItem_abastecerAuxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItem_abastecerAuxiliarActionPerformed(evt);
            }
        });
        jMenu1.add(mnItem_abastecerAuxiliar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbBx_sucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBx_sucursalesActionPerformed
        ListaEnlazada<String> listaTiendas = buscador.buscarTiendasExistentes();
        Nodo<String> nodoAuxiliar = listaTiendas.obtnerPrimerNodo();
        
        for (int tiendaActual = 1; tiendaActual <= listaTiendas.darTamanio(); tiendaActual++) {
            cbBx_sucursales.addItem(nodoAuxiliar.contenido);            
            
            nodoAuxiliar=nodoAuxiliar.nodoSiguiente;                        
        }//fin del for por medio del cual se despiegan a las tiendas existentes a escoger...
        
    }//GEN-LAST:event_cbBx_sucursalesActionPerformed

    private void btn_entrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_entrarActionPerformed
        //se revisa si la contraseña[no estando vacía] obtenida de la DB concuerda con la escrita aqupi no se ignoran mayus ó minus
        contrasenia=passF_contraseniaTrabajador.getPassword();
        
        if(contrasenia!=null){
            if(registrador.registroEmpleado(String.valueOf(contrasenia), txtF_nombreUsuario.getText())){
                if(rbtn_modoCajero.isSelected()){
                     ModoCajero cajero = new ModoCajero();
        
                    this.dispose();
        
                    cajero.setLocationRelativeTo(null);
                    cajero.setVisible(true);
                }
        
                if(rbtn_modoGerente.isSelected()){
                    ModoGerente gerente = new ModoGerente();
                
                    this.dispose();
            
                    gerente.setLocationRelativeTo(null);
                    gerente.setVisible(true);
                }                     
            }//fin del if que se encarga de permitir el ingreso            
            
        }else{
            JOptionPane.showMessageDialog(null, "Debes igresar una contraseña","" , JOptionPane.WARNING_MESSAGE);
        }                                
    }//GEN-LAST:event_btn_entrarActionPerformed

    private void passF_contraseniaTrabajadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passF_contraseniaTrabajadorMouseClicked
        if(txtF_nombreUsuario.getText()!=null){
            //Se procederá a revisar si ese usuario se encuentra en la DB si no es así no se habilitará
            //y se mandará a decir que ese usuario no existe
               
            
            //si existe se obtendrá la contraseña de dicho usuario para no estar consultando cada vez a la DB
            //y con ella se comparará lo que en el password se encuentre, donde dicha comp se hará al presionar el btn
            passF_contraseniaTrabajador.setEnabled(true);
        }
    }//GEN-LAST:event_passF_contraseniaTrabajadorMouseClicked

    private void passF_contraseniaTrabajadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passF_contraseniaTrabajadorKeyTyped
        if((passF_contraseniaTrabajador.getPassword())!=null){
            if(evt.getKeyCode()!=KeyEvent.VK_BACK_SPACE){
              btn_entrar.setEnabled(true);
            }   
            
        }
    }//GEN-LAST:event_passF_contraseniaTrabajadorKeyTyped

    private void passF_contraseniaTrabajadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passF_contraseniaTrabajadorKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
            System.out.println(KeyEvent.VK_BACK_SPACE);
             if((passF_contraseniaTrabajador.getPassword())==null){
                btn_entrar.setEnabled(false);
                btn_entrar.updateUI();
            }
        }//no funciona porque el evento no tiene poder sobre otros componentes que no sean al que app
    }//GEN-LAST:event_passF_contraseniaTrabajadorKeyReleased

    private void mnItem_abastecerAuxiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItem_abastecerAuxiliarActionPerformed
        abastecer();
        
        manipularCampos(true);  
    }//GEN-LAST:event_mnItem_abastecerAuxiliarActionPerformed

    /**
     * Método en el que convergen los otros procesos necesarios para
     * abastecer a la DB [mostrarJFch, leerArchAbast, cada método para 
     * insertar en la DB]
     * 
     */
    public void abastecer(){        
         
         String path=mostrarFileChooserLectura();//se podía meter de una vez en el parámtro del método que se encarga de leer el arch, pero yo quería saber si era null o no para así exe el proceso...
         
         if(path!=null){             
             manejadorArchivo.leerArchivoAbastecimiento(path);//se lee el archivo completamente y se hace el proceso completo de llenado y determinación de errores de una sola vez... xD
     
         }else{
             JOptionPane.showMessageDialog(null, "Ningún archivo seleccionado", "", JOptionPane.WARNING_MESSAGE);
         }
     }
     
    
     public String mostrarFileChooserLectura(){    
        JFileChooser ventanaLectura = new JFileChooser();
        String direccion;
        
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Solo archivos .txt","txt");//esto para evitar que pueda seleccionar cualquier otra extesión que no sea la requerida
        ventanaLectura.setFileFilter(filtro);
        
        if(ventanaLectura.showOpenDialog(ventanaLectura)==(JFileChooser.APPROVE_OPTION)){//aquí sería bueno colocar que tenga el nombre " " y si lo tiene se tomar al arch, esto para evitar que el método trabaje en vano ya que si se le manda un arch que no tiene la sintaxis correcta al final terminaría devolviendo al listado de las líneas que en él se encuentran y con ello se habría trabajado super en vano
            
            direccion=ventanaLectura.getSelectedFile().getAbsolutePath();
            return direccion;
        }        

        
        return null;//es decir que no seleccionó ningún solo archivo y por lo tanto no hay que hacer nada  
    
    }          
    
    public void manipularCampos(boolean estado){
        cbBx_sucursales.setEnabled(estado);        
        txtF_nombreUsuario.setEnabled(estado);//es el código del empleado
        rbtn_modoBodeguero.setEnabled(estado);
        rbtn_modoCajero.setEnabled(estado);
        rbtn_modoGerente.setEnabled(estado);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_entrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbBx_sucursales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_Fondo;
    private javax.swing.JMenuItem mnItem_abastecerAuxiliar;
    private javax.swing.JPasswordField passF_contraseniaTrabajador;
    private javax.swing.JRadioButton rbtn_modoBodeguero;
    private javax.swing.JRadioButton rbtn_modoCajero;
    private javax.swing.JRadioButton rbtn_modoGerente;
    private javax.swing.JTextField txtF_nombreUsuario;
    // End of variables declaration//GEN-END:variables
}
