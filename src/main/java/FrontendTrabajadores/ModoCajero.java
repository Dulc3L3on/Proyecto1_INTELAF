/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontendTrabajadores;

import BackendEntidades.Cajero;
import BackendEntidades.Trabajador;
import java.awt.event.MouseEvent;
import java.util.Collection;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JTable;

/**
 *
 * @author phily
 */
public class ModoCajero extends javax.swing.JFrame {
    public static ResultSetTableModel modeloConsulta = new ResultSetTableModel();
    public static Cajero cajero;//RECUERDA todas las variables que estén en el modo con el mismo nombre deben ser ESTÁTICAS por el hecho de que donde quiere que esté debe conocer todo lo que se ha hecho y no empezar desde 0,     
    public static DefaultListModel modeloLista[] = new DefaultListModel[2]; 
    public static JComboBox comboTiendasDestino;    
    
    Listeners listener = new Listeners();    
    MenuEmergente popup = new MenuEmergente(new javax.swing.JFrame(), true);
    PasoFinal datosFinalesTransaccion = new PasoFinal(new javax.swing.JFrame(), true);
    
    /**
     * Creates new form ModoCajero
     */
    public ModoCajero() {
        initComponents();
        //AUNQUE PENSÁNDOLO BIEN, NO DEBERÍA SER STATIC PORQUE EL BTN PARA VENDER PEDIDO [de consultas] mandará lo seleccionado [accediendo nuevamente a la DB o copiando la fila select...] al txtF donde ya solo resta clickear el btn para añadir el [los] subpedidos a ventas para que dejen de ser pedidos y pasen a mannos de su dueño xD
       
        cajero = new Cajero(lbl_codigoTiendaActual.getText());
        comboTiendasDestino=cbBx_codigosTiendasDestino;
        tbl_tablaConsultas = new JTable(modeloConsulta);//esto solo será útil para el btn de vender pedido, de la ventana de consultas cuando el cliente ha olvidado su número                
        modeloLista[0] = new DefaultListModel();
        lst_ventasARealizar= new JList(modeloLista[0]);
        modeloLista[1] = new DefaultListModel();
        lst_pedidosARealizar= new JList(modeloLista[1]);                
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupBtn_tipoBusqueda = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_codigoTiendaActual = new javax.swing.JLabel();
        txtF_codigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        scrllP_consultas = new javax.swing.JScrollPane();
        tbl_tablaConsultas = new javax.swing.JTable();
        lblBtn_agregarProducto = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_home = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btn_generarTransaccion = new javax.swing.JButton();
        scrllP_ventas = new javax.swing.JScrollPane();
        lst_ventasARealizar = new javax.swing.JList<>();
        scrllP_pedidos = new javax.swing.JScrollPane();
        lst_pedidosARealizar = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_productoSeleccionado = new javax.swing.JTextField();
        spn_Cantidad = new javax.swing.JSpinner();
        rbt_productos = new javax.swing.JRadioButton();
        rbtn_pedidos = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cbBx_codigosTiendasDestino = new javax.swing.JComboBox<>();
        lbl_FondoIzq = new javax.swing.JLabel();
        lbl_FondoDer = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Jmn_verReportes = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1247, 1082));
        setMinimumSize(new java.awt.Dimension(1247, 1082));
        setPreferredSize(new java.awt.Dimension(1247, 1082));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 30, 210, 20);

        jLabel4.setBackground(new java.awt.Color(217, 180, 169));
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(370, 30, 210, 20);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 60, 0, 0);

        lbl_codigoTiendaActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lbl_codigoTiendaActual);
        lbl_codigoTiendaActual.setBounds(80, 50, 120, 30);

        txtF_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtF_codigoActionPerformed(evt);
            }
        });
        txtF_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtF_codigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtF_codigoKeyTyped(evt);
            }
        });
        getContentPane().add(txtF_codigo);
        txtF_codigo.setBounds(150, 130, 190, 28);

        jLabel6.setBackground(new java.awt.Color(226, 187, 131));
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(390, 70, 170, 20);

        tbl_tablaConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_tablaConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_tablaConsultasMouseClicked(evt);
            }
        });
        scrllP_consultas.setViewportView(tbl_tablaConsultas);

        getContentPane().add(scrllP_consultas);
        scrllP_consultas.setBounds(30, 190, 560, 370);

        lblBtn_agregarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1294762.png"))); // NOI18N
        lblBtn_agregarProducto.setEnabled(false);
        lblBtn_agregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBtn_agregarProductoMouseClicked(evt);
            }
        });
        getContentPane().add(lblBtn_agregarProducto);
        lblBtn_agregarProducto.setBounds(260, 620, 120, 110);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sobre.png"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(380, 930, 60, 50);

        lbl_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconoHome.png"))); // NOI18N
        lbl_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_homeMouseClicked(evt);
            }
        });
        getContentPane().add(lbl_home);
        lbl_home.setBounds(470, 900, 100, 100);

        jLabel10.setFont(new java.awt.Font("Sawasdee", 1, 20)); // NOI18N
        jLabel10.setText("CÓDIGO:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(40, 130, 90, 30);

        btn_generarTransaccion.setFont(new java.awt.Font("Sawasdee", 1, 20)); // NOI18N
        btn_generarTransaccion.setText("Generar");
        btn_generarTransaccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generarTransaccionActionPerformed(evt);
            }
        });
        getContentPane().add(btn_generarTransaccion);
        btn_generarTransaccion.setBounds(1070, 940, 130, 40);

        lst_ventasARealizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lst_ventasARealizarMousePressed(evt);
            }
        });
        scrllP_ventas.setViewportView(lst_ventasARealizar);

        getContentPane().add(scrllP_ventas);
        scrllP_ventas.setBounds(660, 70, 550, 370);

        lst_pedidosARealizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lst_pedidosARealizarMousePressed(evt);
            }
        });
        scrllP_pedidos.setViewportView(lst_pedidosARealizar);

        getContentPane().add(scrllP_pedidos);
        scrllP_pedidos.setBounds(660, 520, 550, 390);

        jLabel11.setFont(new java.awt.Font("Sawasdee", 1, 25)); // NOI18N
        jLabel11.setText("<<VENTAS>>");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(860, 10, 160, 40);

        jLabel12.setFont(new java.awt.Font("Sawasdee", 1, 25)); // NOI18N
        jLabel12.setText("<<PEDIDOS>>");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(860, 460, 170, 43);
        getContentPane().add(txt_productoSeleccionado);
        txt_productoSeleccionado.setBounds(120, 580, 470, 28);

        spn_Cantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        getContentPane().add(spn_Cantidad);
        spn_Cantidad.setBounds(30, 580, 80, 28);

        groupBtn_tipoBusqueda.add(rbt_productos);
        rbt_productos.setFont(new java.awt.Font("Sawasdee", 0, 19)); // NOI18N
        rbt_productos.setSelected(true);
        rbt_productos.setText("Productos");
        getContentPane().add(rbt_productos);
        rbt_productos.setBounds(40, 950, 130, 35);

        groupBtn_tipoBusqueda.add(rbtn_pedidos);
        rbtn_pedidos.setFont(new java.awt.Font("Sawasdee", 0, 19)); // NOI18N
        rbtn_pedidos.setText("Pedidos Listos");
        getContentPane().add(rbtn_pedidos);
        rbtn_pedidos.setBounds(180, 950, 160, 35);

        jLabel2.setFont(new java.awt.Font("Sawasdee", 1, 17)); // NOI18N
        jLabel2.setText("Tienda destino:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 630, 120, 30);

        cbBx_codigosTiendasDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBx_codigosTiendasDestino.setEnabled(false);
        cbBx_codigosTiendasDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBx_codigosTiendasDestinoActionPerformed(evt);
            }
        });
        getContentPane().add(cbBx_codigosTiendasDestino);
        cbBx_codigosTiendasDestino.setBounds(30, 670, 190, 28);

        lbl_FondoIzq.setBackground(new java.awt.Color(196, 64, 45));
        lbl_FondoIzq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondo-mosaico-abstracto-fondo-geometrico-triangulo-elementos-diseno-ejemplo-vector-amarillo-naranja-rojo_1151-360.jpg"))); // NOI18N
        lbl_FondoIzq.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lbl_FondoIzq.setOpaque(true);
        getContentPane().add(lbl_FondoIzq);
        lbl_FondoIzq.setBounds(0, 0, 620, 1020);

        lbl_FondoDer.setBackground(new java.awt.Color(217, 197, 115));
        lbl_FondoDer.setOpaque(true);
        getContentPane().add(lbl_FondoDer);
        lbl_FondoDer.setBounds(620, 0, 630, 1020);

        jMenu1.setText("File");

        Jmn_verReportes.setText("Ver reportes");
        Jmn_verReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jmn_verReportesActionPerformed(evt);
            }
        });
        jMenu1.add(Jmn_verReportes);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_homeMouseClicked
        Home home = new Home();
        home.setLocationRelativeTo(null);
        
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_lbl_homeMouseClicked

    private void txtF_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtF_codigoActionPerformed
        
    }//GEN-LAST:event_txtF_codigoActionPerformed

    private void txtF_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtF_codigoKeyPressed
    /*Terminado*/       
        if(evt.getKeyCode()== java.awt.event.KeyEvent.VK_ENTER){//por exe cuando presionen ENTER se provocará que puedan mostrarse coin ya que no se habrá especificado bien el código y con ello simular a lo que google hace para dar coincidencias en la búsqueda ingresada xD
            //se manda a llamar al método para realizar la consulta, esto según el rbtn que esté seleccionado
            //pues si es productos será el método buscarProductos, sino entonces será buscarPedido           
          if(determinarTipoBusqueda()==1){
            for(int tiendaDeBusqueda = 1; tiendaDeBusqueda <= 2; tiendaDeBusqueda++){//es decir esta ó las otras xD... de alguna manera tengo que enterarme si se encontró en la tienda actual, para permitir que se pase al siguiente ídice del for y con ello revisar a las otras tiendas xD
                modeloConsulta.mostrarConsulta(cajero.buscar(1, txtF_codigo.getText(), tiendaDeBusqueda));//el código de la tienda tb lo pude haber obtenido del cbCOdigosTIendaDestino, no habría problema cuando seleccionara a otra tienda porque este proceso ya habría pasado entonces...
                //recuerda que todo lo que quieras saber a cerca de la info de la tabla, lo puedes obtner del modelo, por el hecho de ser quien posee a toda la info
                
                if(tbl_tablaConsultas.getRowCount()==0){//esto indicaría que no se encontró nada en la tienda actual
                    cbBx_codigosTiendasDestino.setEnabled(true);//puesto que aquí decidirá el cliente a que tienda prefiere ir a trar según el tiempo de envío, pues talvez le convenga más ir a otra xD :)
                    //se deshabilitará nuevamente, cuando se agregue el producto al pedido [y si quieres puedes dejarlo en su posición 1, auqnue no es obligatorio porque no afecta a nadie que no se haga edo xD]
                }else{
                    tiendaDeBusqueda=3;//para parar xD
                }
            }
          }else{//es decir que se requiere buscar los pedidos listos...
            modeloConsulta.mostrarConsulta(cajero.buscar(2, txtF_codigo.getText(), 1));
          }                                                
        }
        
    }//GEN-LAST:event_txtF_codigoKeyPressed

    private void Jmn_verReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jmn_verReportesActionPerformed
        Reportes reportes = new Reportes();
        
        reportes.setLocationRelativeTo(null);
        reportes.setVisible(true);
    }//GEN-LAST:event_Jmn_verReportesActionPerformed

    private void txtF_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtF_codigoKeyTyped
        //se app los filtros, según el tipo de busqueda a realizar [producto o de pedido listo]
        
        char caracter = evt.getKeyChar();
        
        if(determinarTipoBusqueda()==2){//puesto que si es producto puede ingresar caracters alfanuméricos xD
            if(caracter>9 || caracter<0) evt.consume();//Quiere decir que si no es un digito entonces se dejará lo anterior que si está correcto [ya sea el espacio en blanco o el caracter ant] xD
        }
    }//GEN-LAST:event_txtF_codigoKeyTyped

    private void tbl_tablaConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_tablaConsultasMouseClicked
        /*Terminado para los dos tipos de búsqueda :3*/
        
        String[] informacion=listener.paraMouseClicked(determinarTipoBusqueda(), lbl_codigoTiendaActual.getText(), (String)modeloConsulta.getValueAt(1,1),tbl_tablaConsultas.getSelectedRow());//se obtiene la descripción del producto desde la DB
        establecerDescripcion(informacion[1]);//al obtener el código del producto mando 1,1 porque sin importar cual se haya seleccionado se tendrá el mismo cód y además como el mín de filas es 1, y estas tablas comienzan a contar desde 1 entonces cabal... de todos modos revisa desde que valor comienza a contar las filas y cols
        establecerLimiteVentas(Integer.parseInt(informacion[0]));  
        if(txt_productoSeleccionado.getText()!=null){// y debería haber otra para cuando no sea un pedido real...
           lblBtn_agregarProducto.setEnabled(true); 
        }        
    }//GEN-LAST:event_tbl_tablaConsultasMouseClicked

    private void lblBtn_agregarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBtn_agregarProductoMouseClicked
        /*Terminado :3 para los 3 tipos de transacciones uwu*/
        
        String descripcionProductoAgregado= cajero.agregarProducto(txtF_codigo.getText(), (Integer)spn_Cantidad.getValue(), txt_productoSeleccionado.getText(), (Integer)modeloConsulta.getValueAt(tbl_tablaConsultas.getSelectedRow(), 5));          
        
        if(determinarTipoBusqueda()==1){//quiere decir que se está tratando con una transacción del momento, no pasada como en el caso de los pedidos
            if(Trabajador.lugarBusqueda==1){//Es decir que se encuentra en la tienda y por ello no es un pedido
                if(!descripcionProductoAgregado.isBlank()){//eso quiere decir que si habían productos y que por ello hay más que dos corchetes y un 0 dentro de ellos
                    modeloLista[0].addElement(descripcionProductoAgregado);//empleo este método puesto que todos deben llegar al final
                    lst_ventasARealizar.updateUI();
                }
            
            }else{//con el else basta porque aquí no buscará completamente los productos como en el caso del Gerente y Cliente
                if(!descripcionProductoAgregado.isEmpty()){//vamos a ver cual es el correcto, yo diría que este isEmpty
                    modeloLista[1].addElement(descripcionProductoAgregado);//y así se agrega justo a la fila que debe para evitar repeticiones :) y se refleje lo hehco enla lista enlazada xD
                    lst_pedidosARealizar.updateUI();
                    cbBx_codigosTiendasDestino.setSelectedIndex(0);//para poner de regreso a la tienda de destino a la tienda actual
                    cbBx_codigosTiendasDestino.setEnabled(false);
                }            
            }     
        }else{//vender un pedido...
            modeloLista[0].addAll((Collection) cajero.agregarProductoPedidoVendido(Long.parseLong(txtF_codigo.getText()), (double)modeloConsulta.getValueAt(tbl_tablaConsultas.getSelectedRow(), 5), (double)modeloConsulta.getValueAt(tbl_tablaConsultas.getSelectedRow(), 6)));//si no llegara a funcionar, lo que debes hacer es ir leyendo los nodos de la lista para irlos agregando 1 a 1, lo normal xD                                    
        }//Ya se agregan los productos listos para ser vendidos a la lista y a JList :3       
        
        if(!modeloLista[0].isEmpty() || !modeloLista[1].isEmpty()){
            rbt_productos.setEnabled(false);
            rbtn_pedidos.setEnabled(false);
        }
        
        lblBtn_agregarProducto.setEnabled(false);//aunque debería ponerle una restricción más para que no se exe si no es una transacción real... o si el txt está vacío por alguna razón...
    }//GEN-LAST:event_lblBtn_agregarProductoMouseClicked

    private void lst_ventasARealizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_ventasARealizarMousePressed
        if(popup.isActive()){
            popup.setVisible(false);
        }//para que sin importar que btn presione, este menucito se esconda y no habrá problemas con esto, ya que solo tiene un tipo de evento de mouse agregado
        
        if(!modeloLista[0].isEmpty() && rbt_productos.isSelected()){//esto es por el hecho de que al tener los datos de un pedido listo, NO debe permitírsele tener estas acciones...
            if(evt.getButton()==MouseEvent.BUTTON3){//pues específicamente con el btn derecho se muestre el menucito
                popup.definirObjetoAAfectar(0, lst_ventasARealizar.getSelectedIndex());//recuerda que el número de fila +1 es = al nodo que se debe eliminar o modificar...
                popup.setLocation(evt.getPoint());
                popup.setVisible(true);
            }//recuerda que la acción respectiva a lo seleccionado se escoje en el menucito el cual emplea al listener, definido por tí para realizar uno u otro proceso
        }/*TERMINADO*///recuerda que en el listener se consideran la situación en la cual al no presionar aceptar, no se hace nada...
        
        
    }//GEN-LAST:event_lst_ventasARealizarMousePressed

    private void lst_pedidosARealizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_pedidosARealizarMousePressed
         if(popup.isActive()){
            popup.setVisible(false);
        }//para que sin importar que btn presione, este menucito se esconda y no habrá problemas con esto, ya que solo tiene un tipo de evento de mouse agregado
        
        if(!modeloLista[1].isEmpty() && rbt_productos.isSelected()){
            if(evt.getButton()==MouseEvent.BUTTON3){//pues específicamente con el btn derecho se muestre el menucito
                popup.definirObjetoAAfectar(1, lst_pedidosARealizar.getSelectedIndex());//recuerda que el número de fila +1 es = al nodo que se debe eliminar o modificar...
                popup.setLocation(evt.getPoint());
                popup.setVisible(true);
            }
        }/*Teminado :3*///recuerda que en la transacción misma es donde se hacen las modif tanto al listado general, como al lustado detallado xD
    }//GEN-LAST:event_lst_pedidosARealizarMousePressed

    private void cbBx_codigosTiendasDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBx_codigosTiendasDestinoActionPerformed
  
    }//GEN-LAST:event_cbBx_codigosTiendasDestinoActionPerformed

    private void btn_generarTransaccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generarTransaccionActionPerformed
        if(!modeloLista[0].isEmpty() || !modeloLista[1].isEmpty()){
            if(determinarTipoBusqueda()==2){
                datosFinalesTransaccion.establecerValoresPorPedidoVendido((double)modeloConsulta.getValueAt(tbl_tablaConsultas.getSelectedRow(), 5), (double)modeloConsulta.getValueAt(tbl_tablaConsultas.getSelectedRow(), 6));
            }//se establecen los valores cuando sea una venta de pedido xD
            
            datosFinalesTransaccion.setLocationRelativeTo(null);
            datosFinalesTransaccion.setVisible(true);//Aquí limpio de una vez las ventanas sin preocupación por las posibles excepciones, esto por el hecho de que en la pseudofacturita me encargo de manejarlas, de tal manera que el cajer no lo sepa xD        
            
            if(!modeloLista[0].isEmpty()){
                modeloLista[0].clear();            
            }
            if(!modeloLista[1].isEmpty()){
                modeloLista[1].clear();
            }
        
            rbtn_pedidos.setEnabled(true);
            rbt_productos.setEnabled(true);
        }//sino ni maiz xD porque no hay nada que hacer xD               
        
    }//GEN-LAST:event_btn_generarTransaccionActionPerformed

    
    public void establecerDescripcion(String descripcion){
        txt_productoSeleccionado.setText(descripcion);
    }
    
    public void establecerLimiteVentas(int maximo){//será útil para este [aunque no es necesario] y para la ventana de reportes, por el hecho de que al seleccionar, se exe el listener en el cual se tendrá el método "paraMouseCLicked" el cual devolverá la cadena con descripción, que para ese caso será útil para llenar a este txtf y limitar al spinner
        spn_Cantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1,maximo, 1));
    }
    
    /**
     * Se encarga de decidir si se buscará pedido o producto
     * @return
     */
    public int determinarTipoBusqueda(){
        if(rbt_productos.isSelected()){
            return 1;
        }
        
        return 2;//puesto que están englobados en un grupo de rBtn entonces o es 1 o es el otro xD
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Jmn_verReportes;
    private javax.swing.JButton btn_generarTransaccion;
    private javax.swing.JComboBox<String> cbBx_codigosTiendasDestino;
    private javax.swing.ButtonGroup groupBtn_tipoBusqueda;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblBtn_agregarProducto;
    private javax.swing.JLabel lbl_FondoDer;
    private javax.swing.JLabel lbl_FondoIzq;
    private javax.swing.JLabel lbl_codigoTiendaActual;
    private javax.swing.JLabel lbl_home;
    private javax.swing.JList<String> lst_pedidosARealizar;
    private javax.swing.JList<String> lst_ventasARealizar;
    private javax.swing.JRadioButton rbt_productos;
    private javax.swing.JRadioButton rbtn_pedidos;
    private javax.swing.JScrollPane scrllP_consultas;
    private javax.swing.JScrollPane scrllP_pedidos;
    private javax.swing.JScrollPane scrllP_ventas;
    private javax.swing.JSpinner spn_Cantidad;
    private javax.swing.JTable tbl_tablaConsultas;
    private javax.swing.JTextField txtF_codigo;
    private javax.swing.JTextField txt_productoSeleccionado;
    // End of variables declaration//GEN-END:variables
}
